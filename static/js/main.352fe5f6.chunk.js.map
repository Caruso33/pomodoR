{"version":3,"sources":["assets/sound.wav","components/Countdown.js","components/footer.js","components/header.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","countdown","require","withStyles","theme","Button","margin","Paper","marginTop","paddingTop","paddingBottom","textAlign","minHeight","Typography","height","IconButton","Form","display","flexDirection","justifyContent","alignItems","flexWrap","TextField","width","Card","maxWidth","state","isRunning","currentPercentage","timerId","reminder","tsMin","tsSec","manualTime","initiateCountdown","addMinutes","minutes","seconds","Date","getTime","currentCountdown","props","deadline","setState","ts","progressCountdown","checkIfFinished","HOURS","MINUTES","SECONDS","timeLeft","currentCountdownSeconds","audio","Audio","Beep","play","clearTimer","setInterval","cb","window","clearInterval","clearReminder","handleStartPause","handleReset","prevProps","this","classes","handleChangeTimeManually","className","CardContent","CircularProgress","size","color","variant","thickness","value","id","onClick","PlayArrow","Pause","Autorenew","noValidate","autoComplete","onSubmit","e","preventDefault","document","querySelector","label","helperText","InputProps","startAdornment","InputAdornment","position","Timelapse","onChange","event","Number","target","isNaN","type","Done","Component","handleChangeCountdownTime","selectedIcon","style","padding","left","bottom","BottomNavigation","showLabels","BottomNavigationAction","icon","Work","FreeBreakfast","Landscape","AppBar","Toolbar","Link","href","textDecoration","fontWeight","Alarm","marginRight","createMuiTheme","palette","primary","light","purple","main","dark","secondary","green","App","x","y","time","CssBaseline","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.352fe5f6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sound.89820ccd.wav\";","import React, { Component } from \"react\";\nimport Beep from \"../assets/sound.wav\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Card from \"@material-ui/core/Card\";\nimport TextField from \"@material-ui/core/TextField\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport { withStyles } from \"@material-ui/styles\";\nimport {\n  Autorenew,\n  PlayArrow,\n  Pause,\n  Timelapse,\n  Done\n} from \"@material-ui/icons\";\n\nconst countdown = require(\"countdown\");\n\nconst styles = theme => ({\n  Button: {\n    margin: 10,\n    \"@media screen and (min-width: 600px)\": {\n      margin: 20\n    }\n  },\n  Paper: {\n    \"@media screen and (max-width: 600px)\": {\n      marginTop: 60\n    },\n    marginTop: 70,\n\n    paddingTop: 30,\n    paddingBottom: 96,\n    textAlign: \"center\",\n    minHeight: \"90vh\"\n  },\n  Typography: {\n    height: 50,\n    margin: 20\n  },\n  IconButton: {\n    margin: 5\n  },\n  Form: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexWrap: \"wrap\",\n    paddingBottom: 10,\n    \"@media screen and (min-width: 360px)\": {\n      flexDirection: \"row\"\n    }\n  },\n  TextField: {\n    width: 200,\n    margin: 25,\n    \"@media screen and (min-width: 600px)\": {\n      margin: 20\n    }\n  },\n  Card: {\n    maxWidth: 300,\n    margin: \"0 auto\",\n    \"@media screen and (min-width: 600px)\": {\n      maxWidth: 500\n    }\n  }\n});\n\nexport default withStyles(styles)(\n  class Countdown extends Component {\n    state = {\n      isRunning: false,\n      currentPercentage: 100,\n      timerId: 0,\n      reminder: 0,\n      tsMin: 0,\n      tsSec: 0,\n      manualTime: 0\n    };\n\n    initiateCountdown = () => {\n      const addMinutes = (minutes, seconds) =>\n        new Date(new Date().getTime() + minutes * 60000 + seconds * 1000);\n\n      const { tsMin, tsSec } = this.state;\n      const { currentCountdown } = this.props;\n\n      const deadline =\n        tsMin === 0 && tsSec === 0\n          ? addMinutes(currentCountdown, 0)\n          : addMinutes(tsMin, tsSec);\n\n      this.setState({\n        timerId: countdown(\n          deadline,\n          ts => {\n            this.progressCountdown(ts);\n            this.checkIfFinished();\n          },\n          countdown.HOURS | countdown.MINUTES | countdown.SECONDS\n        ),\n        isRunning: true\n      });\n    };\n\n    progressCountdown = ts => {\n      const timeLeft = ts.minutes * 60 + ts.seconds;\n      const currentCountdownSeconds = this.props.currentCountdown * 60;\n\n      this.setState(() => ({\n        currentPercentage:\n          ((currentCountdownSeconds - (currentCountdownSeconds - timeLeft)) /\n            currentCountdownSeconds) *\n          100,\n        tsMin: ts.minutes,\n        tsSec: ts.seconds\n      }));\n    };\n\n    checkIfFinished = () => {\n      const { tsMin, tsSec, isRunning } = this.state;\n      const fiveMin = 50000;\n\n      if (tsMin === 0 && tsSec === 0 && isRunning === true) {\n        const audio = new Audio(Beep);\n        audio.play();\n\n        this.clearTimer();\n        this.setState({ reminder: setInterval(() => audio.play(), fiveMin) });\n      }\n    };\n\n    clearTimer = cb => {\n      window.clearInterval(this.state.timerId);\n      this.setState(\n        {\n          timerId: 0,\n          isRunning: false\n        },\n        cb\n      );\n    };\n\n    clearReminder = () => {\n      window.clearInterval(this.state.reminder);\n      this.setState({ reminder: 0 });\n    };\n\n    handleStartPause = () => {\n      const { isRunning } = this.state;\n\n      this.clearReminder();\n      this.clearTimer(() => {\n        if (!isRunning) this.initiateCountdown();\n      });\n    };\n\n    handleReset = () => {\n      this.clearReminder();\n      this.clearTimer(() => {\n        this.setState(() => ({ tsMin: 0, tsSec: 0 }), this.initiateCountdown);\n      });\n    };\n\n    componentDidUpdate(prevProps) {\n      if (prevProps.currentCountdown !== this.props.currentCountdown) {\n        this.handleReset();\n      }\n    }\n\n    render() {\n      const { classes, handleChangeTimeManually } = this.props;\n      const { tsMin, tsSec, reminder } = this.state;\n      return (\n        <Paper className={classes.Paper}>\n          <Card className={classes.Card}>\n            <CardContent>\n              <CircularProgress\n                height={50}\n                size={250}\n                color=\"secondary\"\n                variant=\"static\"\n                thickness={1}\n                value={this.state.currentPercentage}\n              />\n\n              <Typography\n                className={classes.Typography}\n                variant=\"h4\"\n                color=\"inherit\"\n                id=\"countdown\"\n              >\n                {reminder === 0\n                  ? `${tsMin}min - ${tsSec}s`\n                  : `Reminder set to 1min`}\n              </Typography>\n            </CardContent>\n          </Card>\n          <br />\n          <Button\n            className={classes.Button}\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={this.handleStartPause}\n          >\n            <PlayArrow className={classes.IconButton} />\n            Start / Pause\n            <Pause className={classes.IconButton} />\n          </Button>\n          <Button\n            className={classes.Button}\n            variant=\"contained\"\n            color=\"default\"\n            onClick={this.handleReset}\n          >\n            <Autorenew className={classes.IconButton} />\n            Reset\n          </Button>\n          <form\n            noValidate=\"noValidate\"\n            autoComplete=\"off\"\n            className={classes.Form}\n            onSubmit={e => {\n              e.preventDefault();\n              handleChangeTimeManually(this.state.manualTime);\n              this.setState({ manualTime: 0 });\n              const inputField = document.querySelector(\"#time\");\n              inputField.value = \"\";\n            }}\n          >\n            <TextField\n              id=\"time\"\n              label=\"How many minutes?\"\n              helperText=\"values between 0 and 60 accepted\"\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <Timelapse />\n                  </InputAdornment>\n                )\n              }}\n              className={classes.TextField}\n              onChange={event => {\n                const value = Number(event.target.value);\n                if (isNaN(value) || value >= 60) {\n                  return;\n                } else {\n                  this.setState({ manualTime: value });\n                }\n              }}\n              margin=\"normal\"\n            />\n            <Button\n              type=\"submit\"\n              color=\"default\"\n              variant=\"contained\"\n              className={classes.Button}\n            >\n              <Done />\n            </Button>\n          </form>\n        </Paper>\n      );\n    }\n  }\n);\n","import React from \"react\";\nimport { Work, FreeBreakfast, Landscape } from \"@material-ui/icons\";\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\nimport BottomNavigationAction from \"@material-ui/core/BottomNavigationAction\";\nimport Paper from \"@material-ui/core/Paper\";\n\nexport default ({ handleChangeCountdownTime, selectedIcon }) => {\n  return (\n    <Paper\n      style={{\n        padding: \"20px 0px\",\n        position: \"fixed\",\n        left: 0,\n        bottom: 0,\n        height: 96,\n        width: \"100%\"\n      }}\n    >\n      <BottomNavigation value={selectedIcon} showLabels>\n        <BottomNavigationAction\n          label=\"Productive\"\n          icon={<Work />}\n          onClick={() => handleChangeCountdownTime(25, 0)}\n        />\n        <BottomNavigationAction\n          label=\"Short-break\"\n          icon={<FreeBreakfast />}\n          onClick={() => handleChangeCountdownTime(5, 1)}\n        />\n        <BottomNavigationAction\n          label=\"Long-break\"\n          icon={<Landscape />}\n          onClick={() => handleChangeCountdownTime(10, 2)}\n        />\n      </BottomNavigation>\n    </Paper>\n  );\n};\n","import React from \"react\";\nimport { Alarm } from \"@material-ui/icons\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Link from \"@material-ui/core/Link\";\n\nexport default () => {\n  return (\n    <AppBar position=\"fixed\">\n      <Toolbar\n        style={{\n          display: \"flex\",\n          justifyContent: \"space-around\"\n        }}\n      >\n        <Link\n          href=\"https://caruso33.github.io\"\n          color=\"inherit\"\n          style={{ textDecoration: \"underline\", fontWeight: \"bold\" }}\n        >\n          Visit my homepage\n        </Link>\n\n        <Typography variant=\"h6\" color=\"inherit\">\n          Pomodoro\n        </Typography>\n\n        <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\n          <Alarm style={{ marginRight: 10 }} />\n          <Typography variant=\"subtitle1\" color=\"inherit\">\n            Let's be productive!\n          </Typography>\n        </div>\n      </Toolbar>\n    </AppBar>\n  );\n};\n","import green from \"@material-ui/core/colors/green\";\nimport purple from \"@material-ui/core/colors/purple\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport { ThemeProvider as MuiThemeProvider } from '@material-ui/core/styles'\nimport React, { Component } from \"react\";\nimport Countdown from \"./components/Countdown\";\nimport Footer from \"./components/footer\";\nimport Header from \"./components/header\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: purple[300],\n      main: purple[500],\n      dark: purple[700]\n    },\n    secondary: {\n      light: green[300],\n      main: green[500],\n      dark: green[700]\n    }\n  }\n});\n\nclass App extends Component {\n  state = {\n    currentCountdown: 25,\n    selectedIcon: 0\n  };\n\n  handleChangeCountdownTime = (x, y) => {\n    this.setState({\n      currentCountdown: x,\n      selectedIcon: y\n    });\n  };\n\n  handleChangeTimeManually = time => {\n    if (time > 0 && time <= 60) {\n      this.setState({\n        currentCountdown: time,\n        selectedIcon: -1\n      });\n    }\n  };\n\n  render() {\n    const { currentCountdown, selectedIcon } = this.state;\n\n    return (\n      <MuiThemeProvider theme={theme}>\n        <CssBaseline />\n        <Header />\n        <Countdown\n          width={this.props.width}\n          currentCountdown={currentCountdown}\n          handleChangeTimeManually={this.handleChangeTimeManually}\n        />\n        <Footer\n          selectedIcon={selectedIcon}\n          handleChangeCountdownTime={this.handleChangeCountdownTime}\n        />\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}